DROP TABLE IF EXISTS items CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS bookings CASCADE;
DROP TABLE IF EXISTS comments CASCADE;
DROP TABLE IF EXISTS requests CASCADE;

CREATE TABLE users
(
    id_user   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name_user VARCHAR        NOT NULL,
    email     VARCHAR UNIQUE NOT NULL
);

CREATE TABLE requests
(
    id_requests  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description  VARCHAR   NOT NULL,
    requestor_id BIGINT    NOT NULL REFERENCES users (id_user),
    created      TIMESTAMP NOT NULL
);

CREATE TABLE items
(
    id_item     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name_item   VARCHAR NOT NULL,
    description VARCHAR NOT NULL,
    available   BOOLEAN NOT NULL,
    id_owner    BIGINT REFERENCES users (id_user),
    id_request  BIGINT REFERENCES requests (id_requests)
);

CREATE TABLE bookings
(
    id_booking      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    start_booking   TIMESTAMP NOT NULL,
    end_booking     TIMESTAMP NOT NULL,
    id_item_booking BIGINT    NOT NULL REFERENCES items (id_item),
    status_booking  BIGINT    NOT NULL,
    id_user_booker  BIGINT    NOT NULL REFERENCES users (id_user)
);

CREATE TABLE comments
(
    id_comment           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text_comment         VARCHAR   NOT NULL,
    id_item_comment      BIGINT    NOT NULL REFERENCES items (id_item),
    id_author_comment    BIGINT    NOT NULL REFERENCES users (id_user),
    date_created_comment TIMESTAMP NOT NULL
);

